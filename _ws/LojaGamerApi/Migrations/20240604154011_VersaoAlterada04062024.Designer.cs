// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaGamerApi.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    [Migration("20240604154011_VersaoAlterada04062024")]
    partial class VersaoAlterada04062024
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ClienteCompra", b =>
                {
                    b.Property<int>("clientesId")
                        .HasColumnType("int");

                    b.Property<int>("comprasId")
                        .HasColumnType("int");

                    b.HasKey("clientesId", "comprasId");

                    b.HasIndex("comprasId");

                    b.ToTable("ClienteCompra");
                });

            modelBuilder.Entity("Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroPedido")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GamesVenda", b =>
                {
                    b.Property<int>("gamesId")
                        .HasColumnType("int");

                    b.Property<int>("vendasId")
                        .HasColumnType("int");

                    b.HasKey("gamesId", "vendasId");

                    b.HasIndex("vendasId");

                    b.ToTable("GamesVenda");
                });

            modelBuilder.Entity("Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("NotaFiscal")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("ClienteCompra", b =>
                {
                    b.HasOne("Cliente", null)
                        .WithMany()
                        .HasForeignKey("clientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Compra", null)
                        .WithMany()
                        .HasForeignKey("comprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamesVenda", b =>
                {
                    b.HasOne("Games", null)
                        .WithMany()
                        .HasForeignKey("gamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venda", null)
                        .WithMany()
                        .HasForeignKey("vendasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
